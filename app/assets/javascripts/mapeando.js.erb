//var map = new google.maps.Map(document.getElementById('map'));
  var area = [];
  var markersCount = 0;
  markers = [];
  var poligonoArea;
  var dibujado = false;
  var handler = Gmaps.build('Google');
  var zoom = 13;// zoom del mapa 
  var areas = [];
  var ctrlNewZone =0;

//position central del mapa
function positionCenter(pos, items){
  var latlng;
  if (pos ==2){
   
    latlng ={lat: items[0].lat, lng: items[0].lng};
    zoom=15;

  }else{
     latlng = {lat: -27.367193930439235, lng: -55.893094539642334};
  }
  return latlng;
}

  
function createMap(items, vista){
  // var handler = Gmaps.build('Google');

  
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(items);
    handler.bounds.extendWith(markers);
    handler.getMap().setCenter(positionCenter(vista, items));// centra el mapa en lng lat
    handler.getMap().setZoom(zoom);// zoom map x veces
    //handler.fitMapToBounds();
// $('button:submit').attr("disabled", true);


      google.maps.event.addListener(handler.getMap(), 'click', function( event ){
        console.log("adListener");

            if (dibujado ==  false) {
              area.push({ lat: event.latLng.lat(), lng: event.latLng.lng() });

               var newlatlng = { lat: event.latLng.lat(), lng: event.latLng.lng() };
               console.log(newlatlng);
                  var newmarker  = handler.addMarkers(
                [
                  {
                    "lng": event.latLng.lng(),
                    "lat": event.latLng.lat(),
                  }
                ]
              ,{ draggable: true}
              );

              //markers = handler.addMarkers(items ,{ draggable: true})
              markers[markersCount] = newmarker;
              markersCount += 1;
            } else {
              alert("Ups! Ya se encuentra creada la zona. Eliminela para volver a dibujar.");
            }
      });
  });
}















//***********************************************
//*********************ZONAS*********************
//***********************************************



document.addEventListener("turbolinks:load", function() {
//*****************************************************
//editar zona
//*****************************************************
    $("#guardarEdicionZona").click(function(){
         // alert("The button was clicked.");
         var nombre_zona = document.getElementById('zone_nombre_zona').value;
         var color = document.getElementById('zone_color').value;
         var id = document.getElementById('id').value;

         console.log("id de la zona "+id);
         $.ajax({
           url: "/zones/"+id,
           type: "PUT",
           data: {  
           
            "nombre_zona":nombre_zona,
            "color":color,
            "area": area},
           dataType: "json",
           success: function(data) {

               window.location="/zones"
             }
           });
   });
//*************************************************************************
//guardar zona
//************************************************************************
    $("#guardarDatosZona").click(function(){
         // alert("The button was clicked.");
         var nombre_zona = document.getElementById('zone_nombre_zona').value;
         var color = document.getElementById('zone_color').value;
         
         $.ajax({
           url: "/zones/",
           type: "POST",
           data: {
            "nombre_zona":nombre_zona,
            "color":color,
            "area": area},
           dataType: "json",
           success: function(data) {

               window.location="/zones"
             }
           });
   });


  $("#btnmarcar").click(function(){
     var zoneColor =  $("#zone_color").val();
   

    if (markersCount >=3 && dibujado == false) {
      
      poligonoArea = handler.addPolygons({
        paths: area,
        strokeColor: '#ff4c4c',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#ff4c4c',
        fillOpacity: 0.35
      });

        console.log(poligonoArea);
        handler.bounds.extendWith(poligonoArea);
        dibujado = true;
         $('#guardarDatosZona').attr("disabled", false);
        $('#guardarEdicionZona').attr("disabled", false);
    
    }

  });

});



// mapeando zonas

function createMapZone(){       

  dibujado =  false;
  handler.buildMap({ provider: {}, internal: {id: 'map_zone'}}, function(){
    //markers = handler.addMarkers(items);
   // handler.bounds.extendWith(markers);
    handler.getMap().setCenter(positionCenter(1, 0));// centra el mapa en lng lat
    handler.getMap().setZoom(zoom);// zoom map x veces
    //handler.fitMapToBounds();
      google.maps.event.addListener(handler.getMap(), 'click', function( event ){
       console.log("toc toc");

            if (dibujado ==  false) {
              area.push({ lat: event.latLng.lat(), lng: event.latLng.lng() });

               var newlatlng = { lat: event.latLng.lat(), lng: event.latLng.lng() };
               console.log(newlatlng);

                  var newmarker  = handler.addMarkers(
                [
                  {
                    "lng": event.latLng.lng(),
                    "lat": event.latLng.lat(),
                  }
                ]
              ,{ draggable: true}
              );
              markers[markersCount] = newmarker;
              markersCount += 1;

              console.log("sumando markers "+markersCount);
              if (markersCount >=3){$('#btnmarcar').attr("disabled", false);}
            } else {
              alert("Ups! Ya se encuentra creada la zona. Eliminela para volver a dibujar.");
            }
      });

  });
}




//mostrar tdas las zonas ************

function viewZonesAll(items, vista){
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    // markers = handler.addMarkers(items);
    // handler.bounds.extendWith(markers);
    handler.getMap().setCenter(positionCenter(vista, items));// centra el mapa en lng lat
    handler.getMap().setZoom(zoom);// zoom map x veces

var areashow = [];
 var mizona = items[0].zone;
 
 for (var j = 0; j < items.length; j++){
    if (items[j].zone == mizona){
      areashow.push(items[j]);
    }else if (items[j].zone != undefined ){
      mizona = items[j].zone;
     
      //***** mostrar zona
      poligonoArea = handler.addPolygons({
        paths: areashow,
        strokeColor: '#FF0000',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#FF0000',
        fillOpacity: 0.35
      });
    handler.bounds.extendWith(poligonoArea);
    areas.push(poligonoArea);
    var areashow=[];
     areashow.push(items[j]);

    }
 }
if(j==items.length){
        poligonoArea = handler.addPolygons({
        paths: areashow,
        strokeColor: '#FF0000',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#FF0000',
        fillOpacity: 0.35
      });
    handler.bounds.extendWith(poligonoArea);

}
  
  });
}

















//***************************************************************
//zone and markers
        function mapsMarkerZones(items,has_zone, vista){
        // var handler = Gmaps.build('Google');

        handler.buildMap({ provider: {gestureHandling: 'greedy'}, internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(items);
        handler.bounds.extendWith(markers);
        handler.getMap().setCenter(positionCenter(vista, items));// centra el mapa en lng lat
        handler.getMap().setZoom(zoom);// zoom map x veces
        //handler.fitMapToBounds();


        var areashow = [];
        var mizona = has_zone[0].zone;
        var zonaPoly = [];


        for (var j = 0; j < has_zone.length; j++){
        if (has_zone[j].zone == mizona){
        areashow.push(has_zone[j]);
        }else if (has_zone[j].zone != undefined ){
        mizona = has_zone[j].zone;

        //***** mostrar zona
        poligonoArea = handler.addPolygons({
        paths: areashow,
        strokeColor: '#FF0000',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#FF0000',
        fillOpacity: 0.35
        });
        handler.bounds.extendWith(poligonoArea);
        areas.push(poligonoArea);

        var areashow=[];
        areashow.push(has_zone[j]);

        }
        }

        if(j==has_zone.length){
        poligonoArea = handler.addPolygons({
        paths: areashow,
        strokeColor: '#FF0000',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#FF0000',
        fillOpacity: 0.35
        });
        handler.bounds.extendWith(poligonoArea);
        areas.push(poligonoArea);

        }


          var zonaSearch = new google.maps.Polygon({
            paths: areashow
          });

    for (var j = 0; j < items.length; j++){
        var coordinate = new google.maps.LatLng(items[j].lat, items[j].lng);//replace with your lat and lng values
        // console.log(coordinate);

        var isWithinPolygon = google.maps.geometry.poly.containsLocation(coordinate, zonaSearch)  ?
        'ADENTRO' :
        'AFUERA';
          var info = items[j].infowindow;
          info = info.split("/", 1);
          console.log( "El Cliente Numero "+ parseInt(info) + " se encuentra " + isWithinPolygon + " de la zona." );

  
    }



        //si el marker cae dentro del poligono ---> color rojo


        });
        }